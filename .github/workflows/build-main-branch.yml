# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: build main branch

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  check:
    name: Check code
    runs-on: gh-actions
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.5'
          
      - name: Update package indexes
        run: sudo apt update

      - name: Install Git
        run: sudo apt install -y git 

      - name: Git Clone Action
        # You may pin to the exact commit or the version.
        # uses: sudosubin/git-clone-action@8a93ce24d47782e30077508cccacf8a05a891bae
        uses: sudosubin/git-clone-action@v1.0.1
        #with:
          # Repository owner and name. Ex: sudosubin/git-clone-action
          #repository: # optional, default is ${{ github.repository }}
          # Git host platform. Ex: github, gitlab, bitbucket, gitee, or else (git.suckless.org, ...)
          #platform: # optional, default is github
          # Git branch or tag to checkout.
          #ref: # optional
          # Relative path from current directory, where to clone.
          #path: # optional
          

      - name: Go Format
        run: gofmt -s -w . && git diff --exit-code

      - name: Go Vet
        run: go vet ./...

      - name: Go Tidy
        run: go mod tidy && git diff --exit-code

  build:
    name: Build
    needs: check
    runs-on: gh-actions
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v4
      with:
        go-version: '1.21.5'

    - name: Go Mod
      run: go mod download

    - name: Go Mod Verify
      run: go mod verify

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...
